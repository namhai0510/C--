https://www.hackerrank.com/challenges/matrix-rotation-algo/problem?isFullScreen=true
-------------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;

#define nothing ios_base::sync_with_stdio(0); cin.tie(nullptr); cout.tie(nullptr);
using ll = long long;
using ull = unsigned long long;
#define fi first
#define se second
#define pb push_back
#define oo 1e18

const ll mod = 1e9 + 7;
const int maxn = 1e6 + 16;
const int maxa = 1e3 + 10;
const int dx[4] = {0, 0, 1, -1}, dy[4] = {1, -1, 0, 0};
ll a[305][305];

int main() {
    nothing
    if (fopen("SS.INP","r")) {
        freopen("SS.INP","r",stdin);
        freopen("SS.OUT","w",stdout);
    }
    ll n, m, k; cin >> n >> m >> k;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cin >> a[i][j];
        }
    }
    ll l = 0;
    while (l < min(m, n) / 2) {
        ll r = k % (2 * (m + n - 4 * l - 2));
        // l++;
        while (r--) {
            ll fir = a[l][l];
            for (int j = l; j < m - 1 - l; j++) a[l][j] = a[l][j + 1];
            for (int i = l; i < n - 1 - l; i++) a[i][m - 1 - l] = a[i + 1][m - 1 - l];
            for (int j = m - l - 1; j > l; j--) a[n - 1 - l][j] = a[n - 1 - l][j - 1];
            for (int i = n - l - 1; i > l + 1; i--) a[i][l] = a[i - 1][l];
            a[l + 1][l] = fir;
        }
        l++;
    }
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cout << a[i][j] << " ";
        }
        cout << endl;
    }
}
