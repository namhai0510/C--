Carnaval Hạ Long 2015 với chủ đề “Hội tụ tinh hoa - Lan tỏa nụ cười”, điểm mới của lễ hội là sự song hành giữa biểu diễn nghệ thuật “Nơi tinh hoa hội tụ” và diễu hành đường phố “Nụ cười Hạ Long” với sự góp mặt của hơn 2000 diễn viên quần chúng. Có rất nhiều chương trình vui chơi được tổ chức, một trong những trò chơi thu hút được nhiều du khách tham gia đó là trò chơi nhảy lò cò, cụ thể: người chơi cần vượt qua một đoạn đường dài n mét, mỗi bước, người chơi có ba cách nhảy với độ dài bước nhảy tương ứng là 1 mét, 2 mét, 3 mét. Một cách đi chuyển đúng là dãy các bước nhảy có tổng đúng bằng n.
--------------------------------------------------------------------------------------------
#include <bits/stdc++.h>
 
using namespace std;
#define nothing ios_base::sync_with_stdio(0); cin.tie(NULL); cout.tie(NULL);
#define ll long long
#define ull unsigned long long
#define fi first
#define se second
#define pb push_back
#define endl "\n"
const ll oo = 0x3f3f3f3f;
ll mod = 1e9 + 7;
const int maxn = 1e6 + 5;
const int maxa = 2e3 + 5;

class Matrix{
	public:
	vector<vector<ll>> a;
	int row(){
		return a.size();
	}
	int col(){
		return a[0].size();
	}
	Matrix (int row, int col){
		a.resize(row);
		for(int i = 0; i < row; i++){
			a[i].resize(col);
		}
	}
	Matrix (vector<vector<ll>> b){
		a.resize(b.size());
		for(int i = 0; i < a.size(); i++){
			a[i].resize(b[i].size());
			for (int j = 0; j < a[i].size(); j++)
				a[i][j] = b[i][j];
		}
	}
	
	Matrix mul (Matrix b){
		Matrix c (a.size(), b.col());
		for (int i = 0; i < c.row(); i++){
			for(int j = 0; j < c.col(); j++){
				c.a[i][j] = 0;
				for (int k = 0; k < b.row(); k++){
					c.a[i][j] = (c.a[i][j] + a[i][k] * b.a[k][j]) % mod;
				}
			}
		}
		return c;
	}
	Matrix pow(Matrix a, ll n){
		if (n == 1) return a;
		Matrix tmp = pow(a, n/2);
		tmp = tmp.mul(tmp);
		if (n % 2 == 1) tmp = tmp.mul(a);
		return tmp;
	}
	void print(){
		for (int i = 0; i < row(); i++){
			for (int j = 0; j < col(); j++) {
				cout << a[i][j] << " ";
			}
			cout << endl;
		}
	}
};

ll n, m;
Matrix M ({{1, 1, 1}, {1, 0, 0}, {0, 1, 0}});
Matrix ans ({{2, 0, 0}, {1, 0, 0}, {1, 0 ,0}});
int main() {
    nothing
    if (fopen("ss.inp", "r")) {
        freopen("ss.inp", "r", stdin);
        freopen("ss.out", "w", stdout);
    }
    cin >> n >> m;
    
    mod = m;
	
	M = M.pow(M, n - 2);
	ans = M.mul(ans);
	
	cout << ans.a[0][0] << endl;
}
