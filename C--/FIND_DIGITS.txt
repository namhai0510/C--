https://www.hackerrank.com/challenges/find-digits/problem?isFullScreen=true&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen
-------------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;
#define atami ios_base::sync_with_stdio(0); cin.tie(NULL);
#define ll long long
#define fi first
#define se second
#define pb push_back
#define el "\n"
const int maxn = 1e6 + 5;
const int maxa = 1e3 + 5;
ll n,x,cnt;
vector<int> save;
void Input() {
    cin >> n;
}
void Solve() {
    while (n--) {
        cin >> x;
        ll t = x;
        save.clear(); cnt = 0;
        while (t >= 10) {
            save.pb(t % 10);
            t = t / 10;
        }
        save.pb(t % 10);
        //if (t > 0) save.pb(t);
        for (int i = 0; i < save.size(); i++) {
            //cout << save[i] << " ";
            if (save[i] != 0 && x % save[i] == 0) cnt++;
        }
        cout << cnt << el;
    }
}
void Output() {

}
int main() {
    //freopen("SS.INP","r",stdin);
    atami;
    Input();
    Solve();
    Output();
}
