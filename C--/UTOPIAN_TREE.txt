https://www.hackerrank.com/challenges/utopian-tree/problem?isFullScreen=true&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen
-------------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;
#define atami ios_base::sync_with_stdio(0); cin.tie(NULL);
#define ll long long
#define fi first
#define se second
#define pb push_back
#define el "\n"
const int maxn = 1e6 + 5;
const int maxa = 1e3 + 5;
int t;
ll UT[maxn];
void Input() {
    cin >> t;
    UT[0] = 1;
    for (int i = 1; i <= maxa; i++) {
        if (i % 2 == 1) UT[i] = 2*UT[i - 1];
        else UT[i] = UT[i - 1] + 1;
    }
}
void Solve() {
    while (t--) {
        int x;
        cin >> x;
        cout << UT[x] << el;
    }
}
void Output() {
    
}
int main() {
    //freopen("SS.INP","r",stdin);
    atami;
    Input();
    Solve();
    Output();
}