https://www.hackerrank.com/challenges/cavity-map/problem?isFullScreen=true&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen&h_r=next-challenge&h_v=zen
-------------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;
#define atami ios_base::sync_with_stdio(0); cin.tie(NULL);
#define ll long long
#define fi first
#define se second
#define pb push_back
#define el "\n"
const int maxn = 1e6 + 5;
const int maxa = 1e3 + 5;
ll n, f[maxa][maxa];
string a[maxa];
char v[maxa][maxa];
bool can_give = 1;

void Input() {
    cin >> n;
    for (int i = 1; i <= n; i++) {
        cin >> a[i];
        a[i] = '#' + a[i];
    }
    for (int i = 0; i <= n; i++) {
        f[i][0] = 1e9;
    }
    for (int i = 0; i <= n; i++) {
        f[0][i] = 1e9;
    }
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= n; j++) {
            f[i][j] = char(a[i][j]) - '0';
        }
    }
}
void Solve() {
    for (int i = 2; i < n; i++) {
        for (int j = 1; j < n; j++) {
            if (f[i][j] > max({f[i + 1][j], f[i - 1][j], f[i][j - 1], f[i][j + 1]})) {
                v[i][j] = 'X';
            }
        }
    }
}
void Output() {
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= n; j++) {
            if (v[i][j] == 'X') cout << v[i][j];
            else cout << f[i][j];
        }
        cout << el;
    }
}
int main() {
    //freopen("SS.INP","r",stdin);
    atami;
    Input();
    Solve();
    Output();
}
