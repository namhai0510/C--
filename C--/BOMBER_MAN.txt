https://www.hackerrank.com/challenges/bomber-man/problem?isFullScreen=true
-------------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;
#define lonely_coder ios_base::sync_with_stdio(0); cin.tie(NULL);
using ll = long long;
using ull = unsigned long long;
#define in insert
#define fi first
#define se second
#define pb push_back
#define el "\n"
#define oo 1000000000
const ll mod = 1e9 + 7;
const int maxn = 3e6 + 5;
const int maxa = 1e3 + 5;
const int maxx = 1e5 + 7;
ll r, c, n;
ll b[maxa][maxa], b2[maxa][maxa];
void Input() {
    cin >> r >> c >> n;
    for (int i = 1; i <= r; i++) {
        string s;
        cin >> s;
        for (int j = 0; j < s.size(); j++) {
            if (s[j] == 'O') b[i][j + 1] = 1;
            else b[i][j + 1] = 0;
        }
    }
}
void Solve() {
    if (n != 0 && n % 2 == 0) {
        for (int i = 1; i <= r; i++) {
            for (int j = 1; j <= c; j++) {
                cout << 'O';
            }
            cout << el;
        }
    }
    else if (n >= 3) {
        memcpy(b2, b, sizeof(b));
        for (int i = 1; i <= r; i++) {
            for (int j = 1; j <= c; j++) {
                if (b2[i][j]) {
                    if (i != 1) b[i - 1][j] = 1;
                    if (i != r) b[i + 1][j] = 1;
                    if (j != 1) b[i][j - 1] = 1;
                    if (j != c) b[i][j + 1] = 1;
                }
            }
        }
        memcpy(b2, b, sizeof(b));
        for (int i = 1; i <= r; i++) {
            for (int j = 1; j <= c; j++) {
                if (b2[i][j] == 0) {
                    if (i != 1) b[i - 1][j] = 0;
                    if (i != r) b[i + 1][j] = 0;
                    if (j != 1) b[i][j - 1] = 0;
                    if (j != c) b[i][j + 1] = 0;
                }
            }
        }
        if (((n - 3) % 4) == 0) {
            for (int i = 1; i <= r; i++) {    
                for (int j = 1; j <= c; j++) { 
                    if (b[i][j]) b[i][j] = -1; 
                    else b[i][j] = 1; 
                }
            }
            memcpy(b2, b, sizeof(b));
            for (int i = 1; i <= r; i++) {
                for (int j = 1; j <= c; j++) {
                    if (b2[i][j] == -1) {
                        if (i != 1) b[i - 1][j] = 0;
                        if (i != r) b[i + 1][j] = 0;
                        if (j != 1) b[i][j - 1] = 0;
                        if (j != c) b[i][j + 1] = 0;
                        b[i][j] = 0;
                    }
                }
            }
        }
        for (int i = 1; i <= r; i++) {
            for (int j = 1; j <= c; j++) {
                if (b[i][j]) cout << "O";
                else cout << ".";
            }
            cout << el;
        }
    }
    else {
        for (int i = 1; i <= r; i++) {
            for (int j = 1; j <= c; j++) {
                if (b[i][j]) cout << "O";
                else cout << ".";
            }
            cout << el;
        }
    }
}

int main() {
    if (fopen("ODS.INP","r")) {
        freopen("ODS.INP","r",stdin);
        freopen("ODS.OUT","w",stdout);
    }
    lonely_coder;
    Input();
    Solve();

}

