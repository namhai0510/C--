https://www.hackerrank.com/challenges/queens-attack-2/problem?isFullScreen=true
-------------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;
#define atami ios_base::sync_with_stdio(0); cin.tie(NULL);
#define ll long long
#define in insert
#define fi first
#define se second
#define pb push_back
#define el "\n"
const int maxn = 1e6 + 5;
const int maxa = 1e3 + 5;
ll n,k,r,c;
pair<ll,ll> obs[maxn];
ll up1= 0,down1 = 0,right1 = 0,left1 = 0,up_right1 = 0,up_left1 = 0,down_right1 = 0,down_left1 = 0;
void Input() {
    cin >> n >> k; 
    cin >> r >> c;
    for (int i = 1; i <= k; i++) {
        cin >> obs[i].fi >> obs[i].se;
    }
    up1 = n - r;
    down1 = r - 1;
    right1 = n - c;
    left1 = c - 1;
    up_right1 = min(n - r, n - c);
    up_left1 = min(n - r, c - 1);
    down_right1 = min(r - 1, n - c);
    down_left1 = min(r - 1, c - 1);
}
void Solve() {
    for (int i = 1; i <= k; i++) {
        if (abs(obs[i].fi - r) == abs(obs[i].se - c)) {
            //diagonals
            if (obs[i].fi > r && obs[i].se > c) up_right1 = min(up_right1,obs[i].fi - r - 1);
            else if (obs[i].fi > r && obs[i].se < c) up_left1 = min(up_left1,obs[i].fi - r - 1);
            else if (obs[i].fi < r && obs[i].se > c) down_right1 = min(down_right1,obs[i].se - c - 1);
            else if (obs[i].fi < r && obs[i].se < c) down_left1 = min(down_left1,c - obs[i].se - 1);
        }
        else if (obs[i].fi == r) {
            if (obs[i].se > c) right1 = min(right1,obs[i].se - c - 1);
            else if (obs[i].se < c) left1 = min(left1,c - obs[i].se - 1);
        }
        else if (obs[i].se == c) {
            if (obs[i].fi > r) up1 = min(up1,obs[i].fi - r - 1);
            else if (obs[i].fi < r) down1 = min(down1,r - obs[i].fi - 1);
        }
    }
}
void Output() {
    if (n == 1) cout << "0";
    else {
        cout << up1 + down1 + right1 + left1 + up_right1 + up_left1 + down_right1 + down_left1;
    }
}
int main() {
    //freopen("SS.INP","r",stdin);
    atami;
    Input();
    Solve();
    Output();
}
