Một xâu gọi là xâu đối xứng (palindrom) nếu xâu đó đọc từ trái sang phải hay từ phải sang
trái đều như nhau. Cho một xâu S, hãy tìm số kí tự ít nhất cần thêm vào S để S trở thành xâu
đối xứng.
--------------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;
#define hydrogen ios_base::sync_with_stdio(0); cin.tie(nullptr);
#define ll long long
#define fi first
#define se second
const ll mod = 1e9 + 7;
const int maxn = 1e6 + 3;
const int maxa = 1e3 + 3;
int luu[maxn],luu2[maxn];
int dp[maxa][maxa];
string S,P;
int a,b;
int length = 0;

void Input() {
    cin >> S;
    P = S;
    reverse(P.begin(),P.end());
    a = S.length();
    b = P.length();
    S = '#' + S;
    P = '#' + P;
    memset(luu, 0, sizeof(luu));
}

void Solve() {
    for (int i = 0; i <= a; i++) {
        dp[i][0] = 0;
    }
    for (int j = 0; j <= b; j++) {
        dp[0][j] = 0;
    }
    for (int i = 1; i <= a; i++) {
        for (int j = 1; j <= b; j++) {
            if (S[i] == P[j]) {
                dp[i][j] = dp[i - 1][j - 1] + 1;
            }
            else dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);
        }
    }
}

void TruyVet(int i, int j) {
    if (i == 0 || j == 0) return;
    if (S[i] == P[j]) {
        TruyVet(i - 1, j - 1);
        cout << S[i];
        length++;
        luu[i] = 1;
    }
    else {
        if (dp[i][j] == dp[i - 1][j]) {
            TruyVet(i - 1, j);
        }
        else {
            TruyVet(i, j - 1);
        }
    }
}

void Output() {
    int res = a - dp[a][b];
    cout << res << endl;
    TruyVet(a,b);
    int it = length;
    cout << endl;
    for (int i = 1; i <= a; i++) {
        if (luu[i] == 1) {
            it--;
            if (it <= (length + 1) /2) {
                it = i + 1;
                break;
            }
        }
    }
    cout << it << " " << length << endl;
    for (int i = 1; i <= 2*it; i++) {
        if (luu[i] == 0) {
            if (2*it - i > 0) cout << S[i] << " " << 2*it - i << endl; //them vao khong cap nhat
            //cout << S[i] << " " << 2*it - i << endl; // them vao co cap nhat
            luu[i] = 1; luu[2*it - i] = 1;
        }
    }
}

int main() {
    hydrogen;
    Input();
    Solve();
    Output();
    return 0;
}




