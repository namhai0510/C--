Mỗi trong N cô bò (4 <= N <= 16) của bác John có một số seri phân biệt S_i (1 <= S_i <= 25,000). Các cô bò tự hào đến nỗi mỗi cô đều đeo một chiếc vòng vàng có khắc số seri của mình trên cổ theo kiểu các băng đảng giang hồ.

Các cô bò giang hồ này thích nổi loạn nên đứng xếp hàng chờ vắt sữa theo một thứ tự gọi được gọi là 'hỗn loạn'.

Một thứ tự bò là 'hỗn loạn' nếu trong dãy số seri tạo bởi hàng bò, hai số liên tiếp khác biệt nhau nhiều hơn K (1 <= K <= 3400). Ví dụ, nếu N = 6 và K = 1 thì 1, 3, 5, 2, 6, 4 là một thứ tự 'hỗn loạn' nhưng 1, 3, 6, 5, 2, 4 thì không (vì hai số liên tiếp 5 và 6 chỉ chênh lệch 1).

Hỏi có bao nhiêu cách khác nhau để N cô bò sắp thành thứ tự 'hỗn loạn'?
------------------------------------------------------------------------------------------------------------------
Thuật toán:

dp[i][mask] : số cách sắp xếp trạng thái mask hỗn loạn và kết thúc ở con bò i
=> dp[i][seton(mask,i)] += dp[j][mask] với getbit(mask, i) == 0 && abs(a[i] - a[j]) > k
// con bò i chưa được đưa vào dãy, đồng thời chênh lệch giữa con bò i và con bò j không được quá k

Kết quả sẽ là tổng các dp[i][(1 << n) - 1]
------------------------------------------------------------------------------------------------------------------
#include <bits/stdc++.h>
 
using namespace std;
#define nothing ios_base::sync_with_stdio(0); cin.tie(NULL); cout.tie(NULL);
#define ll long long
#define ull unsigned long long
#define fi first
#define se second
#define pb push_back
#define endl "\n"
const ll oo = 0x3f3f3f3f;
ll mod = 1e9 + 7;
const int maxn = 1e6 + 5;
const int maxa = 5e3 + 5;

int getbit(int mask, int i) {
    return ((mask >> i) & 1);
}

int seton(int mask, int i) {
    return (mask | (1LL << i));
}

int setoff(int mask, int i) {
    return (mask & ~(1LL << i));
}

ll n, k, a[maxn], dp[20][maxn];
int main() {
    nothing
    if (fopen("ss.inp", "r")) {
        freopen("ss.inp", "r", stdin);
        freopen("ss.out", "w", stdout);
    }
    cin >> n >> k;
    for (int i = 0; i < n; i++) {
        cin >> a[i];
    }
    
    memset(dp, 0, sizeof(dp));
    
    for (int i = 0; i < n; i++) {
        dp[i][(1 << i)] = 1;
    }
    
    for (int mask = 0; mask < (1 << n); mask++) {
        for (int i = 0; i < n; i++) {
            if (getbit(mask, i) == 0)
                for (int j = 0; j < n; j++) {
                    if (getbit(mask, j) == 1 && abs(a[i] - a[j]) > k) dp[i][seton(mask, i)] += dp[j][mask];
                }
        }
    }
    
    ll ans = 0;
    for (int i = 0; i < n; i++) {
        ans += dp[i][(1 << n) - 1];
    }
    
    cout << ans;
}
