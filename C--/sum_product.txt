Cho dãy số a1,a2,a3,…,an
. Đếm số lượng đoạn [l,r](l<r)
 sao cho tổng các số bằng tích các số trong đoạn đó.

----------------------
#include<bits/stdc++.h>
using namespace std;
#define nothing ios_base::sync_with_stdio(0); cin.tie(NULL);
using ll = long long;
using ull = unsigned long long;
#define in insert
#define fi first
#define se second
#define pb push_back
#define el "\n"
const ll oo = 1e18;
const ll mod = 1e9 + 7;
const int maxn = 1e6 + 5;
const int maxa = 3e4 + 5;

ll n, a[maxn], one[maxn], res = 0;

void Sub1() {
    for (int i = 1; i <= n; i++) {
        ll pro = a[i], sum = a[i];
        for (int j = i + 1; j <= n; j++) {
            if (pro > 1e15) break;
            pro *= a[j];
            sum += a[j];
            
            if (pro == sum) {
                // cout << i << " " << j << " " << pro << " " << sum << endl;
                res++;
            }
        }
    }
    cout << res;
}

int main() {
    nothing
    if (fopen("ss.inp","r")) {
        freopen("ss.inp","r",stdin);
        freopen("ss.out","w",stdout);
    }
    cin >> n;
    for (int i = 1; i <= n; i++) cin >> a[i];
    
    if (n <= 1005) {
        Sub1();
        return 0;
    }
    
    int leng = 0;
    for (int i = n; i >= 1; i--) {
        if (a[i] == 1) leng++;
        else leng = 0;
        
        one[i] = leng;
    }
    
    // for (int i = 1; i <= n; i++) cout << one[i] << " ";
    
    for (int start = 1; start <= n; start++) {
        ll pro = a[start], sum = a[start];
        int i = start + 1;
        
        while (i <= n) {
            if (a[i] != 1) {
                pro *= a[i];
                sum += a[i];
                if (pro > 1e15) break;
                if (pro == sum) {
                    res++;
                }
                i++;
            }
            else {
                if (sum + one[i] >= pro && sum < pro) {
                    res++;
                }
                sum += one[i];
                i += one[i];
            }
        }
    }
    cout << res << endl;
    return 0;
}